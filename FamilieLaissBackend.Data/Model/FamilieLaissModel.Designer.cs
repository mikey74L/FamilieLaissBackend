//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 03.02.2017 22:29:21
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata


#endregion

namespace FamilieLaissBackend.Data.Model
{

    #region FamilieLaissEntities

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FamilieLaissEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new FamilieLaissEntities object.
        /// </summary>
        public FamilieLaissEntities() : 
                base(@"name=FamilieLaissEntitiesConnectionString", "FamilieLaissEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new FamilieLaissEntities object using the connection string found in the 'FamilieLaissEntities' section of the application configuration file.
        /// </summary>
        public FamilieLaissEntities(string connectionString) : 
                base(connectionString, "FamilieLaissEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new FamilieLaissEntities object.
        /// </summary>
        public FamilieLaissEntities(EntityConnection connection) : base(connection, "FamilieLaissEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaGroup> MediaGroups
        {
            get
            {
                if ((_MediaGroups == null))
                {
                    _MediaGroups = base.CreateObjectSet<MediaGroup>("MediaGroups");
                }
                return _MediaGroups;
            }
        }
        private ObjectSet<MediaGroup> _MediaGroups;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the MediaGroups EntitySet.
        /// </summary>
        public void AddToMediaGroups(MediaGroup mediaGroup)
        {
            base.AddObject("MediaGroups", mediaGroup);
        }

        #endregion
    }

    #endregion
}

namespace FamilieLaissBackend.Data.Model
{

    /// <summary>
    /// There are no comments for FamilieLaissBackend.Data.Model.MediaGroup in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="FamilieLaissBackend.Data.Model", Name="MediaGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaGroup : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new MediaGroup object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        /// <param name="typ">Initial value of Typ.</param>
        /// <param name="name">Initial value of Name.</param>
        /// <param name="createDate">Initial value of CreateDate.</param>
        public static MediaGroup CreateMediaGroup(long iD, int typ, string name, global::System.DateTimeOffset createDate)
        {
            MediaGroup mediaGroup = new MediaGroup();
            mediaGroup.ID = iD;
            mediaGroup.Typ = typ;
            mediaGroup.Name = name;
            mediaGroup.CreateDate = createDate;
            return mediaGroup;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public long ID
        {
            get
            {
                long value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private long _ID;
        partial void OnGetID(ref long value);
        partial void OnIDChanging(ref long value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for Typ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int Typ
        {
            get
            {
                int value = _Typ;
                OnGetTyp(ref value);
                return value;
            }
            set
            {
                if (_Typ != value)
                {
                  OnTypChanging(ref value);
                  ReportPropertyChanging("Typ");
                  _Typ = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Typ");
                  OnTypChanged();
              }
            }
        }
        private int _Typ;
        partial void OnGetTyp(ref int value);
        partial void OnTypChanging(ref int value);
        partial void OnTypChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Description
        {
            get
            {
                string value = _Description;
                OnGetDescription(ref value);
                return value;
            }
            set
            {
                if (_Description != value)
                {
                  OnDescriptionChanging(ref value);
                  ReportPropertyChanging("Description");
                  _Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Description");
                  OnDescriptionChanged();
              }
            }
        }
        private string _Description;
        partial void OnGetDescription(ref string value);
        partial void OnDescriptionChanging(ref string value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// There are no comments for CreateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset CreateDate
        {
            get
            {
                global::System.DateTimeOffset value = _CreateDate;
                OnGetCreateDate(ref value);
                return value;
            }
            set
            {
                if (_CreateDate != value)
                {
                  OnCreateDateChanging(ref value);
                  ReportPropertyChanging("CreateDate");
                  _CreateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CreateDate");
                  OnCreateDateChanged();
              }
            }
        }
        private global::System.DateTimeOffset _CreateDate;
        partial void OnGetCreateDate(ref global::System.DateTimeOffset value);
        partial void OnCreateDateChanging(ref global::System.DateTimeOffset value);
        partial void OnCreateDateChanged();

        #endregion
    }

}
